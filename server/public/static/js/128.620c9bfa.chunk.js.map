{"version":3,"file":"static/js/128.620c9bfa.chunk.js","mappings":"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","sources":["container/pages/Home/Home.jsx","container/pages/Home/Partials/SelectedImage.js","container/pages/Home/Upload.jsx","services/v1API.js"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { Col, Image, Layout, Row, Typography } from \"antd\";\r\nimport { getPlan } from \"../../../redux/auth/authSlice\";\r\nimport { setStorage } from \"../../../helpers\";\r\n\r\nconst { Content, Sider } = Layout;\r\nconst { Title, Text } = Typography;\r\n\r\nexport const categories = [\r\n  { src: \"(1) Product Design.webp\", value: \"Product Design\" },\r\n  { src: \"(2) Packaging.webp\", value: \"Package Design\" },\r\n  { src: \"(3) Logo design.webp\", value: \"Logo Design\" },\r\n  { src: \"(4) Resturant Design.webp\", value: \"Resturant Design\" },\r\n  { src: \"(5) Room Design.webp\", value: \"Room Design\" },\r\n  { src: \"(6) Store Design.webp\", value: \"Store Exterior\" },\r\n  { src: \"(7) Advertisement.webp\", value: \"Advertisement Design\" },\r\n  { src: \"(8) App Design.webp\", value: \"App Design\" },\r\n  { src: \"(9) Website Design.webp\", value: \"Website Design\" },\r\n  { src: \"(10) Flyer Design.webp\", value: \"Flyer Design\" },\r\n  { src: \"(11) Business Cards.webp\", value: \"Business Cards\" },\r\n  { src: \"(12) Sticker Design.webp\", value: \"Sticker Design\" },\r\n  { src: \"(13) Album Art.webp\", value: \"Album Art\" },\r\n  { src: \"(14) Signage.webp\", value: \"Signage Design\" },\r\n  { src: \"(15) Automotive.webp\", value: \"Automotive Design\" },\r\n  { src: \"(16) Fashion.webp\", value: \"Fashion Design\" },\r\n  { src: \"(17) Furniture.webp\", value: \"Furniture Design\" },\r\n  { src: \"(18) Film Concept Art.webp\", value: \"Film Concept Art\" },\r\n  { src: \"(19) Stock Photos.webp\", value: \"Stock Photos\" },\r\n  { src: \"(20) Food Photography.webp\", value: \"Food Photography\" },\r\n  { src: \"(21) Character Design.webp\", value: \"Character Design\" },\r\n]\r\n\r\nfunction Home() {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const plan = useSelector((state) => state.auth.plan);\r\n  const { id } = useParams();\r\n\r\n  useEffect(() => {\r\n    dispatch(getPlan());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // console.log(id, plan);\r\n    // if(!plan && !id) {\r\n    //     navigate('/plans');\r\n    // }\r\n  }, [plan]);\r\n\r\n  const handleNext = (cat) => {\r\n    setStorage('image_type', cat.value);\r\n    navigate('/upload');\r\n  }\r\n\r\n  return (\r\n    <Content className=\"text-center max-w-7xl mx-auto p-2 my-5\">\r\n      <Row>\r\n        <Col span={24}>\r\n          <h3 className=\"text-lg sm:text-xl md:text-2xl mb-6\">Pick a Category to Explore Your Creativity</h3>\r\n        </Col>\r\n        <Col span={24}>\r\n          <Row gutter={[24, 24]}>\r\n            {categories.map((cat, index) => <Col key={index} span={8}>\r\n              <div className=\"text-center hover:-m-1\">\r\n                <Image preview={false} src={`/imgs/category/${cat.src}`} className=\"!w-full md:w-[80%] mx-auto bg-gray-300 cursor-pointer rounded shadow-sm hover:shadow-lg\" onClick={() => handleNext(cat)} placeholder={true}></Image> <br />\r\n                <h4 className=\"text-md sm:text-lg md:text-xl mt-2\">{cat.value}</h4>\r\n              </div>\r\n            </Col>)}\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </Content>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nconst Checkmark = ({ selected }) => (\r\n  <div\r\n    style={\r\n      selected\r\n        ? { left: \"4px\", top: \"4px\", position: \"absolute\", zIndex: \"1\" }\r\n        : { display: \"none\" }\r\n    }\r\n  >\r\n    <svg\r\n      style={{ fill: \"white\", position: \"absolute\" }}\r\n      width=\"24px\"\r\n      height=\"24px\"\r\n    >\r\n      <circle cx=\"12.5\" cy=\"12.2\" r=\"8.292\" />\r\n    </svg>\r\n    <svg\r\n      style={{ fill: \"#06befa\", position: \"absolute\" }}\r\n      width=\"24px\"\r\n      height=\"24px\"\r\n    >\r\n      <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\" />\r\n    </svg>\r\n  </div>\r\n);\r\n\r\nconst imgStyle = {\r\n  transition: \"transform .135s cubic-bezier(0.0,0.0,0.2,1),opacity linear .15s\"\r\n};\r\nconst selectedImgStyle = {\r\n  transform: \"translateZ(0px) scale3d(0.9, 0.9, 1)\",\r\n  transition: \"transform .135s cubic-bezier(0.0,0.0,0.2,1),opacity linear .15s\"\r\n};\r\nconst cont = {\r\n  backgroundColor: \"#eee\",\r\n  cursor: \"pointer\",\r\n  overflow: \"hidden\",\r\n  position: \"relative\"\r\n};\r\n\r\nconst SelectedImage = ({\r\n  index,\r\n  photo,\r\n  margin,\r\n  direction,\r\n  top,\r\n  left,\r\n  selected,\r\n  onClick,\r\n}) => {\r\n  const [isSelected, setIsSelected] = useState(selected == index);\r\n  //calculate x,y scale\r\n  const sx = (100 - (30 / photo.width) * 100) / 100;\r\n  const sy = (100 - (30 / photo.height) * 100) / 100;\r\n  selectedImgStyle.transform = `translateZ(0px) scale3d(${sx}, ${sy}, 1)`;\r\n\r\n  if (direction === \"column\") {\r\n    cont.position = \"absolute\";\r\n    cont.left = left;\r\n    cont.top = top;\r\n  }\r\n\r\n  const handleOnClick = e => {\r\n    // setIsSelected();\r\n    onClick(index);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setIsSelected(selected == index);\r\n  }, [selected]);\r\n\r\n  return (\r\n    <div\r\n      style={{ margin, height: photo.height, width: photo.width, ...cont }}\r\n      className={!isSelected ? \"not-selected\" : \"\"}\r\n    >\r\n      <Checkmark selected={isSelected ? true : false} />\r\n      <img\r\n        alt={photo.title}\r\n        style={\r\n          isSelected ? { ...imgStyle, ...selectedImgStyle } : { ...imgStyle }\r\n        }\r\n        {...photo}\r\n        onClick={handleOnClick}\r\n      />\r\n      <style>{`.not-selected:hover{outline:2px solid #06befa}`}</style>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SelectedImage;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { AutoComplete, Button, Col, Divider, Image, Input, Layout, Row, Skeleton, Spin, Typography, Upload, message } from \"antd\";\r\nimport { DeleteOutlined, FileImageOutlined, SelectOutlined, UploadOutlined } from \"@ant-design/icons\";\r\nimport Gallery from \"react-photo-gallery\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport $ from \"jquery\";\r\n\r\nimport constants from \"../../../config/constants\";\r\nimport { getStorage } from \"../../../helpers\";\r\nimport { getPlan } from \"../../../redux/auth/authSlice\";\r\nimport { deleteFile, getImageDescription, getImagesfromPin } from \"../../../services/v1API\";\r\nimport SelectedImage from \"./Partials/SelectedImage\";\r\nimport { categories } from \"./Home\";\r\n\r\nconst { Content, Sider } = Layout;\r\nconst { Title, Text } = Typography;\r\nconst { Dragger } = Upload;\r\n\r\nfunction UploadContainer() {\r\n  // const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  // const plan = useSelector((state) => state.auth.plan);\r\n  // const { id } = useParams();\r\n\r\n  // const [percent, setPercent] = useState(0);\r\n  const [search, setSearch] = useState(getStorage(\"image_type\") || \"Product Renderings\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [loadingMore, setLoadingMore] = useState(false);\r\n  const [pinLoading, setPinLoading] = useState(false);\r\n  const [fileLists, setFileLists] = useState([]);\r\n  const [name, setName] = useState(\"\");\r\n  const [path, setPath] = useState(\"\");\r\n  const [pinImages, setPinImages] = useState([]);\r\n  const [setting, setSetting] = useState({});\r\n  const [selected, setSelected] = useState(-1);\r\n\r\n  const getPinImages = (flag = false) => {\r\n    let data = { query: search };\r\n    if (!flag) {\r\n      data = { ...data, ...setting };\r\n      setLoadingMore(true);\r\n    } else {\r\n      $(\"#imagelistview .infinite-scroll-component\").scrollTop(0);\r\n      setPinLoading(true);\r\n    }\r\n    getImagesfromPin(data).then(res => {\r\n      // console.log(res.data);\r\n      if (flag) {\r\n        setPinImages(res.data.images);\r\n      } else {\r\n        setPinImages([...pinImages, ...res.data.images]);\r\n      }\r\n      setSetting({\r\n        bookmarks: res.data.bookmarks,\r\n        token: res.data.token,\r\n        cookie: res.data.cookie,\r\n      });\r\n      // console.log(res.data.bookmarks);\r\n    }).catch(err => {\r\n      console.log(err);\r\n    }).finally(() => {\r\n      setPinLoading(false);\r\n      setLoadingMore(false);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    // dispatch(getPlan());\r\n    getPinImages(true);\r\n  }, []);\r\n\r\n  // useEffect(() => {\r\n  //   // setSetting({});\r\n  // }, [search]);\r\n\r\n\r\n  // useEffect(() => {\r\n  //   // console.log(id, plan);\r\n  //   // if(!plan && !id) {\r\n  //   //     navigate('/plans');\r\n  //   // }\r\n  // }, [plan]);\r\n\r\n  const handleSearch = () => {\r\n    getPinImages(true);\r\n  }\r\n\r\n  const handleChange = (info) => {\r\n    if (info.file.status === \"done\") {\r\n      setPath(info.file.response?.path);\r\n      info.file.thumbUrl = `${constants.SOCKET_URL}${info.file.response?.path}`;\r\n    }\r\n    setFileLists(info.fileList.length == 1 ? info.fileList : info.fileList.splice(1, 1));\r\n    setSelected(-1);\r\n    // console.log(info);\r\n  };\r\n\r\n  const handleDelete = (file) => {\r\n    setFileLists([]);\r\n    setPath(\"\");\r\n    deleteFile({\r\n      path: file.response?.path,\r\n    }).then((res) => {\r\n      // console.log(res);\r\n    }).catch((err) => {\r\n      console.log(err);\r\n    });\r\n  }\r\n\r\n  const handleNext = async () => {\r\n    if (loading) return;\r\n    if (!name) return message.warning('Please input name your project!');\r\n    let data = fileLists.filter(file => file.status == 'done').map(file => file.response?.path);\r\n    if (data.length == 0 && selected == -1) return message.warning(\"Please choose your inspiration image\");\r\n    setLoading(true);\r\n    try {\r\n      let res = await getImageDescription({\r\n        fileLists: selected == -1 ? data : [pinImages[selected].src],\r\n        name\r\n      });\r\n      // console.log(res);\r\n      navigate(`/result/${res.data.id}`);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n    setLoading(false);\r\n  }\r\n\r\n  return (\r\n    <div className=\"text-center max-w-7xl w-screen mx-auto px-6 md:px-2 p-2\">\r\n      <Row gutter={[24, 24]} className=\"mt-6\">\r\n        <Col span={24}>\r\n          <div className=\"flex items-center\">\r\n            <div className=\"flex-1\">\r\n              <AutoComplete\r\n                style={{\r\n                  width: \"100%\",\r\n                }}\r\n                options={categories}\r\n                filterOption={(inputValue, option) =>\r\n                  option.value.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1\r\n                }\r\n                value={search}\r\n                onChange={(e) => {\r\n                  setSearch(e);\r\n                }}\r\n              >\r\n                <Input.Search size=\"large\" /* className=\"[&_input]:opacity-70 [&_input:hover]:opacity-100 [&_input:focus]:opacity-100\" */ onSearch={() => handleSearch()} loading={pinLoading} placeholder=\"Search images..\" />\r\n              </AutoComplete>\r\n            </div>\r\n            <div className=\"mx-5\"><span className=\"text-gray-500 text-lg\">or</span></div>\r\n            <div className=\"\">\r\n              <Upload\r\n                name=\"file\"\r\n                multiple={false}\r\n                fileList={fileLists}\r\n                action={`${constants.HOST_URL}v1/upload`}\r\n                showUploadList={false}\r\n                listType=\"picture\"\r\n                accept=\"image/*\"\r\n                headers={{\r\n                  Authorization: getStorage(\"token\"),\r\n                }}\r\n                data={{\r\n                  oldFile: path,\r\n                }}\r\n                onChange={handleChange}\r\n                onRemove={handleDelete}>\r\n                <Button className=\"\" block size=\"large\" icon={<UploadOutlined />}>Upload Image</Button>\r\n              </Upload>\r\n            </div>\r\n          </div>\r\n          <div className=\"mt-4\">\r\n            {(fileLists.length > 0 && path) && <div className=\"relative w-fit mx-auto\">\r\n              <Image src={fileLists[0].thumbUrl} className=\"max-h-80\" />\r\n              <div className=\"absolute top-4 right-4\">\r\n                <Button type=\"primary\" shape=\"circle\" icon={<DeleteOutlined />} danger onClick={() => handleDelete(fileLists[0])}></Button>\r\n              </div>\r\n            </div>}\r\n            {fileLists.length > 0 && !path && <div className=\"flex justify-center\"><Spin tip={`Uploading(${fileLists[0]?.percent || 0}%)...`}><div className=\"flex items-center justify-center h-80 w-80\">\r\n            </div></Spin></div>}\r\n          </div>\r\n        </Col>\r\n        <Col span={24}>\r\n          <Title level={3}>Select an image that you'd like to use as a starting point.</Title>\r\n        </Col>\r\n        <Col span={24}>\r\n          <div id=\"imagelistview\" className=\"max-h-[calc(100vh_-_425px)] min-h-[350px] overflow-y-auto overflow-x-hidden border-4 border-solid border-blue-400 rounded-lg\">\r\n            {/* <Row gutter={[32, 32]}>\r\n              {pinImages.map((image, index) => <Col span={6}>\r\n                <Image src={image} alt=\"pin\" />\r\n              </Col>)}\r\n            </Row> */}\r\n            {/* {pinImages.map((image, index) => <img key={index} src={image} alt={'pin'} className=\"w-1/4\"/>)} */}\r\n            <InfiniteScroll\r\n              dataLength={pinImages.length}\r\n              next={() => { getPinImages() }}\r\n              hasMore={true}\r\n              scrollableTarget=\"imagelistview\"\r\n              // height=\"calc(100vh - 440px)\"\r\n              loader={\r\n                <div className=\"mt-2 flex\">\r\n                  <div className=\"w-1/4 p-1\">\r\n                    <Skeleton.Image\r\n                      className=\"!w-full\"\r\n                      key={Date.now()}\r\n                      active\r\n                      loading={loadingMore}\r\n                    />\r\n                  </div>\r\n                  <div className=\"w-1/4 p-1\">\r\n                    <Skeleton.Image\r\n                      className=\"!w-full\"\r\n                      key={Date.now()}\r\n                      active\r\n                      loading={loadingMore}\r\n                    />\r\n                  </div>\r\n                  <div className=\"w-1/4 p-1\">\r\n                    <Skeleton.Image\r\n                      className=\"!w-full\"\r\n                      key={Date.now()}\r\n                      active\r\n                      loading={loadingMore}\r\n                    />\r\n                  </div>\r\n                  <div className=\"w-1/4 p-1\">\r\n                    <Skeleton.Image\r\n                      className=\"!w-full\"\r\n                      key={Date.now()}\r\n                      active\r\n                      loading={loadingMore}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              }\r\n              // endMessage={<Divider plain>It is all, nothing more 🤐</Divider>}\r\n              scrollThreshold={\"100px\"}\r\n            // useWindow={false}\r\n            >\r\n              {pinImages.length > 0 && <Gallery photos={pinImages} direction=\"column\" columns={4} onClick={(e) => {\r\n                console.log(e.target, arguments);\r\n              }}\r\n                renderImage={({ index, left, top, key, photo }) => {\r\n                  return (\r\n                    <SelectedImage\r\n                      selected={selected}\r\n                      key={key}\r\n                      margin={\"2px\"}\r\n                      direction=\"column\"\r\n                      index={index}\r\n                      photo={photo}\r\n                      left={left}\r\n                      top={top}\r\n                      onClick={(pos) => {\r\n                        setSelected(pos);\r\n                        setFileLists([]);\r\n                      }}\r\n                    />\r\n                  )\r\n                }}\r\n              />}\r\n            </InfiniteScroll>\r\n          </div>\r\n        </Col>\r\n        <Col span={24}>\r\n          <Input\r\n            type=\"text\"\r\n            className=\"text-center\"\r\n            size=\"large\"\r\n            placeholder=\"Name Your Project...\"\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n          />\r\n        </Col>\r\n        {/* <Col span={24}>\r\n        </Col> */}\r\n        {/* {path && <Col span={12}>\r\n          <Image src={`${constants.SOCKET_URL}${path}`} width={'100%'} />\r\n        </Col>} */}\r\n        <Col span={24}>\r\n          <div className=\"text-center\">\r\n            <Button type=\"primary\" size=\"large\" onClick={handleNext} loading={loading} className=\"w-72\">Generate</Button>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UploadContainer;\r\n","import { getRequest, postRequest } from \"./axiosClient\";\r\n\r\nexport const getImageDescription = (data) => postRequest('v1/getImageDescription', data);\r\nexport const deleteFile = (data) => postRequest('v1/deleteFile', data);\r\nexport const getConceptById = (id, data) => getRequest(`v1/getConceptById/${id}`, data);\r\nexport const generateImage = (id, data) => postRequest(`v1/generateImage/${id}`, data);\r\nexport const getBlendingIdeas = (id, data) => postRequest(`v1/getBlendingIdeas/${id}`, data);\r\nexport const getProjects = (id, data) => getRequest(`v1/getProjects/${id || \"\"}`, data);\r\nexport const getImagesfromPin = (data) => postRequest(`v1/getImagesfromPin`, data);"],"names":["Content","Sider","Layout","Title","Text","Typography","categories","src","value","dispatch","useDispatch","navigate","useNavigate","plan","useSelector","state","auth","id","useParams","useEffect","getPlan","_jsx","className","children","_jsxs","Row","Col","span","gutter","map","cat","index","Image","preview","concat","onClick","setStorage","handleNext","placeholder","Checkmark","_ref","selected","style","left","top","position","zIndex","display","fill","width","height","cx","cy","r","d","imgStyle","transition","selectedImgStyle","transform","cont","backgroundColor","cursor","overflow","_ref2","photo","margin","direction","isSelected","setIsSelected","useState","sx","sy","alt","title","e","Dragger","Upload","_fileLists$","search","setSearch","getStorage","loading","setLoading","loadingMore","setLoadingMore","pinLoading","setPinLoading","fileLists","setFileLists","name","setName","path","setPath","pinImages","setPinImages","setting","setSetting","setSelected","getPinImages","flag","arguments","length","undefined","data","query","$","scrollTop","getImagesfromPin","then","res","images","bookmarks","token","cookie","catch","err","console","log","finally","handleDelete","file","_file$response","deleteFile","response","AutoComplete","options","filterOption","inputValue","option","toUpperCase","indexOf","onChange","Input","size","onSearch","multiple","fileList","action","constants","showUploadList","listType","accept","headers","Authorization","oldFile","info","_info$file$response","_info$file$response2","status","thumbUrl","splice","onRemove","Button","block","icon","UploadOutlined","type","shape","DeleteOutlined","danger","Spin","tip","percent","level","InfiniteScroll","dataLength","next","hasMore","scrollableTarget","loader","Skeleton","active","Date","now","scrollThreshold","Gallery","photos","columns","target","renderImage","key","SelectedImage","pos","async","message","filter","_file$response2","getImageDescription","error","postRequest","getConceptById","getRequest","generateImage","getBlendingIdeas","getProjects"],"sourceRoot":""}