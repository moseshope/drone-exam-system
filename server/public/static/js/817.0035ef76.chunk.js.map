{"version":3,"file":"static/js/817.0035ef76.chunk.js","mappings":"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","sources":["container/pages/Profile/Partials/UpdateProfileForm.jsx","container/pages/Profile/Partials/UpdatePasswordForm.jsx","container/pages/Profile/Partials/DeleteAccountForm.jsx","container/pages/Profile/Partials/CancelSubscriptionForm.jsx","container/pages/Profile/Edit.jsx","../node_modules/antd/es/col/index.js","../node_modules/antd/es/row/index.js"],"sourcesContent":["import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Form, Input, Button, Card, Typography } from 'antd';\r\nimport { updateProfile } from '../../../../redux/auth/authSlice';\r\n\r\nconst { Title, Text } = Typography;\r\n\r\nfunction UpdateProfileForm() {\r\n  const [form] = Form.useForm();\r\n  const loader = useSelector(state => state.auth.loader);\r\n  const user = useSelector(state => state.auth.user);\r\n  const errors = useSelector(state => state.auth.errors);\r\n  const dispatch = useDispatch();\r\n  const onFinish = (values) => {\r\n    // console.log('Received values of form: ', values);\r\n    dispatch(updateProfile(values));\r\n  };\r\n\r\n  return (\r\n    <Card className='max-w-xl w-full shadow-lg'>\r\n      <div className=\"my-4\">\r\n        <Title level={3}>Profile Information</Title>\r\n        <Text type='secondary'>Update your account's profile information and email address.</Text>\r\n      </div>\r\n      <Form\r\n        name=\"register\"\r\n        form={form}\r\n        initialValues={{\r\n          name: user.name,\r\n          email: user.email,\r\n        }}\r\n        className=\"form\"\r\n        scrollToFirstError\r\n        onFinish={onFinish}\r\n      >\r\n        <Form.Item\r\n          name=\"name\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please input your Name!',\r\n            },\r\n          ]}\r\n        >\r\n          <Input size=\"large\"\r\n            placeholder=\"Name\"\r\n            autoFocus\r\n          />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"email\"\r\n          rules={[\r\n            {\r\n              type: 'email',\r\n              message: 'The input is not valid E-mail!',\r\n            },\r\n            {\r\n              required: true,\r\n              message: 'Please input your E-mail!',\r\n            },\r\n          ]}\r\n          validateStatus={errors.email ? 'error' : ''}\r\n          help={errors.email}\r\n        >\r\n          <Input size='large'\r\n            placeholder=\"E-mail\" />\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <Button loading={loader} type=\"primary\" htmlType=\"submit\" className=\"mt-2\"\r\n            size=\"large\">\r\n              Save\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default UpdateProfileForm;","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Form, Input, Button, Card, Typography } from 'antd';\r\nimport { updatePassword } from '../../../../redux/auth/authSlice';\r\n\r\nconst { Title, Text } = Typography;\r\n\r\nfunction UpdatePasswordForm() {\r\n  const [form] = Form.useForm();\r\n  const loader = useSelector(state => state.auth.loader);\r\n  const errors = useSelector(state => state.auth.errors);\r\n  const dispatch = useDispatch();\r\n  const onFinish = (values) => {\r\n    // console.log('Received values of form: ', values);\r\n    dispatch(updatePassword(values));\r\n    form.resetFields();\r\n  };\r\n\r\n  return (\r\n    <Card className='max-w-xl w-full shadow-lg'>\r\n      <div className=\"my-4\">\r\n        <Title level={3}>Update Password</Title>\r\n        <Text type='secondary'>Ensure your account is using a long, random password to stay secure.</Text>\r\n      </div>\r\n      <Form\r\n        name=\"update_password\"\r\n        form={form}\r\n        className=\"form\"\r\n        scrollToFirstError\r\n        onFinish={onFinish}\r\n      >\r\n        <Form.Item\r\n          name=\"oldPassword\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please input current password!',\r\n            },\r\n          ]}\r\n          validateStatus={errors.oldPassword ? 'error' : ''}\r\n          help={errors.oldPassword}\r\n          hasFeedback\r\n        >\r\n          <Input.Password size=\"large\" placeholder=\"Current Password\" />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"newPassword\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please input new password!',\r\n            },\r\n          ]}\r\n          hasFeedback\r\n        >\r\n          <Input.Password size=\"large\" placeholder=\"New Password\" />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"confirm\"\r\n          dependencies={['newPassword']}\r\n          hasFeedback\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please confirm new password!',\r\n            },\r\n            ({ getFieldValue }) => ({\r\n              validator(_, value) {\r\n                if (!value || getFieldValue('newPassword') === value) {\r\n                  return Promise.resolve();\r\n                }\r\n                return Promise.reject(new Error('The two passwords that you entered do not match!'));\r\n              },\r\n            }),\r\n          ]}\r\n        >\r\n          <Input.Password size=\"large\" placeholder=\"Confirm new Password\" />\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <Button loading={loader} type=\"primary\" htmlType=\"submit\" className=\"mt-2\"\r\n            size=\"large\">\r\n            Save\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default UpdatePasswordForm;","import React, { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Form, Input, Button, Modal, Card, Typography } from 'antd';\r\nimport { deleteAccount } from '../../../../redux/auth/authSlice';\r\n\r\nconst { Title, Text } = Typography;\r\n\r\nfunction DeleteAccountForm() {\r\n\r\n  const [form] = Form.useForm();\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const loader = useSelector(state => state.auth.loader);\r\n  const errors = useSelector(state => state.auth.errors);\r\n  const dispatch = useDispatch();\r\n\r\n  const onFinish = (values) => {\r\n    // console.log('Received values of form: ', values);\r\n    dispatch(deleteAccount(values));\r\n    form.resetFields();\r\n  };\r\n\r\n  const showModal = () => {\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsModalOpen(false);\r\n  };\r\n  return (\r\n    <Card className='max-w-xl w-full shadow-lg'>\r\n      <div className=\"my-4\">\r\n        <Title level={3}>Delete Account</Title>\r\n        <Text type='secondary'>Once your account is deleted, all of its resources and data will be permanently deleted. Before deleting your account, please download any data or information that you wish to retain.</Text>\r\n      </div>\r\n      <div className=\"my-2\">\r\n        <Button type=\"primary\" size='large' danger onClick={showModal}>\r\n          Delete Account\r\n        </Button>\r\n        <Modal\r\n          title=\"Delete Account\"\r\n          open={isModalOpen}\r\n          onOk={form.submit}\r\n          onCancel={handleCancel}\r\n          footer={[\r\n            <Button key=\"back\" type='primary' onClick={handleCancel}>\r\n              Cancel\r\n            </Button>,\r\n            <Button key=\"submit\" type=\"primary\" loading={loader} danger onClick={form.submit}>\r\n              Delete Account\r\n            </Button>,\r\n          ]}\r\n        >\r\n          <div className=\"my-4\">\r\n            <Text type='secondary'>Once your account is deleted, all of its resources and data will be permanently deleted. Before deleting your account, please download any data or information that you wish to retain.</Text>\r\n          </div>\r\n          <Form\r\n            form={form}\r\n            name=\"delete_account\"\r\n            onFinish={onFinish}\r\n          >\r\n            <Form.Item\r\n              name=\"password\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: 'Please input your password!',\r\n                },\r\n              ]}\r\n              validateStatus={errors.password ? 'error' : ''}\r\n              help={errors.password}\r\n              hasFeedback\r\n            >\r\n              <Input.Password placeholder='Password' size='large' />\r\n            </Form.Item>\r\n          </Form>\r\n        </Modal>\r\n      </div>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default DeleteAccountForm;","import React, { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Button, Card, Typography, Popconfirm, message } from \"antd\";\r\nimport {\r\n  cancelSubscription,\r\n  getUserSubscription,\r\n} from \"../../../../services/planAPI\";\r\nimport { getUser } from \"../../../../redux/auth/authSlice\";\r\n\r\nconst { Title, Text } = Typography;\r\n\r\nfunction CancelSubscriptionForm() {\r\n\r\n  const dispatch = useDispatch();\r\n  const [loading, setLoading] = useState(false);\r\n  const [actSub, setActSub] = useState({});\r\n  const [selSub, setSelSub] = useState({});\r\n\r\n  useEffect(() => {\r\n    getUserSubscription().then((res) => {\r\n      setActSub(res.data.activeSubscription ?? {});\r\n      setSelSub(res.data.selectedSubscription ?? {});\r\n    });\r\n  }, []);\r\n\r\n  const handleCancel = () => {\r\n    setLoading(true);\r\n    cancelSubscription()\r\n      .then((res) => {\r\n        message.info(\"Successfully cancelled!\");\r\n        dispatch(getUser());\r\n      })\r\n      .catch(console.log)\r\n      .finally(() => {\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {actSub._id && (\r\n        <Card className=\"max-w-xl w-full shadow-lg\">\r\n          <div className=\"my-4\">\r\n            <Title level={3}>Plan management</Title>\r\n            <Text type=\"secondary\">Please cancel your plan if you want.</Text>\r\n          </div>\r\n          <Popconfirm\r\n            title=\"Are you sure?\"\r\n            description=\"Are you sure to cancel current plan?\"\r\n            onConfirm={handleCancel}\r\n            okText=\"Yes\"\r\n            cancelText=\"No\"\r\n          >\r\n            <Button loading={loading} type=\"primary\" danger size=\"large\">\r\n              Cancel Plan\r\n            </Button>\r\n          </Popconfirm>\r\n        </Card>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CancelSubscriptionForm;","import React from 'react'\r\nimport { Col, Row, Typography } from 'antd';\r\nimport UpdateProfileForm from './Partials/UpdateProfileForm';\r\nimport UpdatePasswordForm from './Partials/UpdatePasswordForm';\r\nimport DeleteAccountForm from './Partials/DeleteAccountForm';\r\nimport CancelSubscriptionForm from './Partials/CancelSubscriptionForm';\r\n\r\nconst { Title, Text } = Typography;\r\n\r\nfunction Edit() {\r\n\r\n  return (\r\n    <div className='container mx-auto my-4 px-4'>\r\n      <Row gutter={[16, 16]}>\r\n        <Col span={24} className='flex justify-center'>\r\n          <UpdateProfileForm />\r\n        </Col>\r\n        <Col span={24} className='flex justify-center'>\r\n          <UpdatePasswordForm />\r\n        </Col>\r\n        {/* <Col span={24} className='flex justify-center'>\r\n          <CancelSubscriptionForm />\r\n        </Col> */}\r\n        <Col span={24} className='flex justify-center'>\r\n          <DeleteAccountForm />\r\n        </Col>\r\n      </Row>\r\n    </div >\r\n  )\r\n}\r\n\r\nexport default Edit;","\"use client\";\n\nimport { Col } from '../grid';\nexport default Col;","\"use client\";\n\nimport { Row } from '../grid';\nexport default Row;"],"names":["Title","Text","Typography","form","Form","loader","useSelector","state","auth","user","errors","dispatch","useDispatch","_jsxs","Card","className","children","_jsx","level","type","name","initialValues","email","scrollToFirstError","onFinish","values","updateProfile","rules","required","message","Input","size","placeholder","autoFocus","validateStatus","help","Button","loading","htmlType","updatePassword","resetFields","oldPassword","hasFeedback","dependencies","_ref","getFieldValue","validator","_","value","Promise","reject","Error","resolve","isModalOpen","setIsModalOpen","useState","handleCancel","danger","onClick","showModal","Modal","title","open","onOk","submit","onCancel","footer","deleteAccount","password","Row","gutter","Col","span","UpdateProfileForm","UpdatePasswordForm","DeleteAccountForm"],"sourceRoot":""}